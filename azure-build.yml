trigger:
  - master
    
pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  
steps:
  - task: UseDotNet@2
    displayName: "Use .NET Core SDK"
    inputs:
      packageType: sdk
      version: '6.0.x'
  - task: DotNetCoreCLI@2
    displayName: 'Install report generator tool'
    inputs:
      command: custom
      custom: tool
      arguments: 'install dotnet-reportgenerator-globaltool -g'
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: restore
  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '-c $(buildConfiguration) --no-restore'
  - task: DotNetCoreCLI@2
    displayName: 'Run tests'
    inputs:
      command: test
      projects: 'tests/**/*.csproj'
      arguments: '-c $(buildConfiguration) --no-build --settings ".runsettings"'
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    inputs:
      codeCoverageTool: Cobertura
      reportDirectory: $(Agent.TempDirectory)/Result
      summaryFileLocation: $(Agent.TempDirectory)/**/*cobertura.xml
  - task: DotNetCoreCLI@2
    displayName: "Pack project"
    inputs:
      command: 'pack'
      packagesToPack: 'src/EzDev.GenericRepository/*.csproj'
      includesymbols: true
      includesource: true
      versioningScheme: 'off'
      outputDir: "$(Build.ArtifactStagingDirectory)/app"
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    inputs:
      codeCoverageTool: Cobertura
      reportDirectory: $(Agent.TempDirectory)/Result
      summaryFileLocation: $(Agent.TempDirectory)/**/*cobertura.xml
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact to drop'
    inputs:
      artifactName: 'nuget'
      PathtoPublish: $(Build.ArtifactStagingDirectory)/app