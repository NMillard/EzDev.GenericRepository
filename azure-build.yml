trigger:
  - master
    
pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'
  
steps:
  - task: DotNetCoreCLI@2
    displayName: 'Install EF Core tools'
    inputs:
      command: custom
      custom: tool
      arguments: 'install dotnet-ef -g'

  - task: DotNetCoreCLI@2
    displayName: 'Install user-secrets'
    inputs:
      command: custom
      custom: tool
      arguments: 'install dotnet-user-secrets -g'

  - task: DotNetCoreCLI@2
    displayName: 'Install report generator tool'
    inputs:
      command: custom
      custom: tool
      arguments: 'install dotnet-reportgenerator-globaltool -g'

  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: restore
      
  - task: DotNetCoreCLI@2
    displayName: 'Build solution'
    inputs:
      command: build
      projects: 'src/**/*.csproj'
      arguments: '-c $(buildConfiguration) --no-restore'

  - task: DotNetCoreCLI@2
    displayName: 'Run tests'
    inputs:
      command: test
      projects: 'test/**/*.csproj'
      arguments: '-c $(buildConfiguration) --no-build --settings ".runsettings"'
      
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage results'
    inputs:
      codeCoverageTool: Cobertura
      reportDirectory: $(Agent.TempDirectory)/Result
      summaryFileLocation: $(Agent.TempDirectory)/**/*cobertura.xml
      
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact to drop'
    inputs:
      artifactName: 'solution'
      PathtoPublish: $(Build.ArtifactStagingDirectory)/app